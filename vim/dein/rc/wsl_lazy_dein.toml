########################################
# ファイラー
########################################

## Defx
    [[plugins]]
      repo = 'Shougo/defx.nvim'
      # depends = ['defx-git', 'defx-icons']
      hook_add = '''
        nnoremap <silent> <Leader>f :<C-u>Defx -new `expand('%:p:h')` -search=`expand('%:p')` -columns=icons:indent:filename:type<CR>
        nnoremap <silent> <Leader>e :<C-u>Defx -winwidth=40 -columns=icons:indent:filename:type -toggle<CR>

        autocmd FileType defx call s:defx_my_settings()
          function! s:defx_my_settings() abort
            " Define mappings
            nnoremap <silent><buffer><expr> <CR>
              \ defx#is_directory() ? defx#do_action('open') : defx#do_action('multi', ['drop', 'quit'])
            nnoremap <silent><buffer><expr> o
              \ defx#is_directory() ? defx#do_action('open_or_close_tree') : defx#do_action('multi', ['drop', 'quit'])
            nnoremap <silent><buffer><expr> O defx#do_action('open_tree_recursive')
            nnoremap <silent><buffer><expr> P defx#do_action('open', 'pedit')
            nnoremap <silent><buffer><expr> s defx#do_action('open', 'vsplit')

            nnoremap <silent><buffer><expr> h defx#do_action('cd', ['..'])
            nnoremap <silent><buffer><expr> j line('.') == line('$') ? 'gg' : 'j'
            nnoremap <silent><buffer><expr> k line('.') == 1 ? 'G' : 'k'
            nnoremap <silent><buffer><expr> l
              \ defx#is_directory() ? defx#do_action('open') : defx#do_action('multi', ['drop', 'quit'])

            nnoremap <silent><buffer><expr> H defx#do_action('change_vim_cwd')
            nnoremap <silent><buffer><expr> ~ defx#do_action('cd')

            nnoremap <silent><buffer><expr> yy defx#do_action('yank_path')

            nnoremap <silent><buffer><expr> R defx#do_action('rename')

            nnoremap <silent><buffer><expr> Y defx#do_action('copy')
            nnoremap <silent><buffer><expr> X defx#do_action('move')
            nnoremap <silent><buffer><expr> P defx#do_action('paste')
            nnoremap <silent><buffer><expr> D defx#do_action('remove')

            nnoremap <silent><buffer><expr> F defx#do_action('new_directory')
            nnoremap <silent><buffer><expr> N defx#do_action('new_file')
            nnoremap <silent><buffer><expr> M defx#do_action('new_multiple_files')

            nnoremap <silent><buffer><expr> ST defx#do_action('toggle_sort', 'time')
            nnoremap <silent><buffer><expr> SS defx#do_action('toggle_sort', 'size')

            nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
            nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')

            nnoremap <silent><buffer><expr> i defx#do_action('toggle_columns', 'mark:indent:icon:filename:type:size:time')
            nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')
            nnoremap <silent><buffer><expr> x defx#do_action('execute_system')
            nnoremap <silent><buffer><expr> I defx#do_action('toggle_ignored_files')
            nnoremap <silent><buffer><expr> ; defx#do_action('repeat')
            nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')

            nnoremap <silent><buffer><expr> q defx#do_action('quit')
            nnoremap <silent><buffer><expr> r defx#do_action('redraw')
          endfunction

          " call defx#custom#option('_', {
          "       \ 'split': 'vertical',
          "       \ 'direction': 'topleft',
          "       \ 'show_ignored_files': 1,
          "       \ 'buffer_name': 'exlorer',
          "       \ 'toggle': 1,
          "       \ 'resume': 1,
          "       \ })
    '''


